# K16 Configuration
# This file centralizes all parameters for the K16 vector search library

# -----------------------------------------------------------------------------
# General parameters
# -----------------------------------------------------------------------------
general:
  debug: false                # Enable debug mode for additional logging

# -----------------------------------------------------------------------------
# Tree construction parameters (build_tree.py)
# -----------------------------------------------------------------------------
build_tree:
  # Core tree building parameters
  max_depth: 32               # Maximum tree depth
  max_leaf_size: 16            # Maximum leaf size for stopping subdivision
  max_data: 256               # Number of vectors to store in each leaf
  max_workers: 12             # Maximum number of parallel processes (default: CPU count)
  use_gpu: true               # Use GPU for K-means clustering if available

  # HNSW improvement parameters
  use_hnsw_improvement: true  # Enable candidate improvement with HNSW after construction
  prune_unused_leaves: true  # Remove leaves that are never used during search
  hnsw_batch_size: 1000       # Batch size for HNSW searches
  grouping_batch_size: 5000   # Batch size for vector grouping
  hnsw_m: 16                  # M parameter for HNSW (connections per node)
  hnsw_ef_construction: 200   # efConstruction parameter for HNSW (index quality vs. build speed)

# -----------------------------------------------------------------------------
# Search parameters (test.py, search.py)
# -----------------------------------------------------------------------------
search:
  k: 10                       # Number of nearest neighbors to retrieve
  queries: 100                # Number of random queries for benchmark tests
  mode: "ram"                 # Loading mode: "ram" (full load) or "mmap" (memory-mapped)
  cache_size_mb: 500          # Cache size in megabytes (for mmap mode)
  use_faiss: true             # Use FAISS for naive search comparison and final filtering

  # Search algorithm configuration
  search_type: "single"         # Search algorithm: "single" (simple descent) or "beam" (beam search)
  beam_width: 1              # Number of branches to explore simultaneously (beam search only)
                              # Higher values improve recall at the cost of search speed

# -----------------------------------------------------------------------------
# Tree representation parameters
# -----------------------------------------------------------------------------
use_flat_tree: true           # Use the optimized flat structure for faster search

flat_tree:
  # Dimension reduction parameters
  max_dims: 512                       # Number of dimensions to keep at each level
  reduction_method: "directional"     # Dimension selection method: "variance" or "directional"

# -----------------------------------------------------------------------------
# Data preparation parameters (prepareData.py)
# -----------------------------------------------------------------------------
prepare_data:
  model: "intfloat/multilingual-e5-large"  # Embedding model to use
  batch_size: 128                          # Batch size for encoding
  normalize: true                          # Normalize embeddings to unit length

# -----------------------------------------------------------------------------
# File paths and defaults
# -----------------------------------------------------------------------------
files:
  vectors_dir: "/home/dess4ever/workspace/k16/data"   # Vectors directory
  trees_dir: "/home/dess4ever/workspace/k16/models"   # Trees directory
  default_qa: "qa.txt"                                # Default text file
  default_vectors: "data.bin"                         # Default vectors file
  default_tree: "tree.bsp"                            # Default tree file

# -----------------------------------------------------------------------------
# API configuration
# -----------------------------------------------------------------------------
api:
  host: "127.0.0.1"                      # Host address for API server
  port: 8000                             # Port for API server
  reload: false                          # Enable auto-reload for development